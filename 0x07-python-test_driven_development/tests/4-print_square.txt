============================
Test 4-print_square.py
============================

This module defines the square-printing function ``print_square(size)``.

Usage
=====

Squares are printed using the '#' symbole

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(1)
    #

::

    >>> print_square(4)
    ####
    ####
    ####
    ####

::   
    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####

::

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

If ``size`` is zero, the function will prints nothing.

::

    >>> print_square(0)

Invalid Size
=============

The parameter ``size`` must be an integer. or, a TypeError will be raised.

::

    >>> print_square("text")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(9.4)
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

If ``size`` is less than zero, a ValueError will be raised.

::

    >>> print_square(-9)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Note that the type is checking occurs before value checking.

::

    >>> print_square(-7.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

At least one argument must be provided.

::

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
